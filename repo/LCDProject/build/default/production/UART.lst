MPASM  5.42  /HOME/BEKEBAND/MPLABXPROJECTS/MA   3-4-2012  15:48:50         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002         #include <P16F877A.INC> ;processor specific definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F877A processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2011 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00564         LIST
                      00003 
                      00004         #define __UART_CODE
                      00005 
                      00006         #include        "uart.inc"
                      00001 
                      00002 
                      00003 
                      00004 ;----------------------------------------------------------------------------
                      00005 ;Constants
                      00006 
  00000060            00007 SPBRG_VAL       EQU     .96             ;set baud rate 9600 for 15Mhz clock
  00000014            00008 TX_BUF_LEN      EQU     .20             ;length of transmit circular buffer
  00000014            00009 RX_BUF_LEN      EQU     TX_BUF_LEN      ;length of receive circular buffer
                      00010 
                      00011 ;----------------------------------------------------------------------------
                      00012 ;Bit Definitions
                      00013 
  00000000            00014 TxBufFull       EQU     0               ;bit indicates Tx buffer is full
  00000001            00015 TxBufEmpty      EQU     1               ;bit indicates Tx buffer is empty
  00000002            00016 RxBufFull       EQU     2               ;bit indicates Rx buffer is full
  00000003            00017 RxBufEmpty      EQU     3               ;bit indicates Rx buffer is empty
  00000004            00018 ReceivedCR      EQU     4               ;bit indicates <CR> character received
  00000000            00019 ON_BIT          EQU 0
                      00020 
                      00021 
                      00022         ifndef  __UART_CODE
                      00023 
                      00024         EXTERN  InterruptCode
                      00025         EXTERN  SetupSerial
                      00026         EXTERN  StopSerial
                      00027         EXTERN  CopyRxToTx
                      00028         EXTERN  PutTxBuffer
                      00029         EXTERN  SetupTimer1
                      00030 ;       EXTERN  Buttons
                      00031         EXTERN  TIMER_ON
                      00032 
                      00033         else
                      00034         #undefine       __UART_CODE
                      00035         endif
                      00036 
                      00007 
                      00008 
MPASM  5.42  /HOME/BEKEBAND/MPLABXPROJECTS/MA   3-4-2012  15:48:50         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00009         errorlevel -302, -207           ;suppress "not in bank 0" message
                      00010 
  00000001            00011 TMR1_HIGH       EQU     0x01
  00000000            00012 TMR1_LOW        EQU     0x00
                      00013 
                      00014 ;----------------------------------------------------------------------------
                      00015 ;Variables
                      00016 
                      00017         UDATA
0000                  00018 Flags           res     1                       ;byte to store indicator flags
0001                  00019 TempData        res     1                       ;temporary data in main routines 
0002                  00020 BufferData      res     1               ;temporary data in buffer routines 
0003                  00021 TxStartPtr      res     1               ;pointer to start of data in TX buffer
0004                  00022 TxEndPtr        res     1               ;pointer to end of data in TX buffer
0005                  00023 RxStartPtr      res     1               ;pointer to start of data in RX buffer
0006                  00024 RxEndPtr        res     1               ;pointer to end of data in RX buffer
0007                  00025 Buttons         res     1
0008                  00026 PORTD_BUF       res     1
0009                  00027 TIMER_ON        res     1
  0000                00028         GLOBAL  TIMER_ON
                      00029 
                      00030                 CBLOCK  0x70
  00000070            00031                 WREG_TEMP               ;storage for WREG during interrupt
  00000071            00032                 STATUS_TEMP             ;storage for STATUS during interrupt
  00000072            00033                 PCLATH_TEMP             ;storage for PCLATH during interrupt
  00000073            00034                 FSR_TEMP                ;storage for FSR during interrupt
                      00035                 ENDC
                      00036 
                      00037                 CBLOCK  0xA0
  000000A0            00038                 TxBuffer:TX_BUF_LEN     ;transmit data buffer
                      00039                 ENDC
                      00040 
                      00041                 CBLOCK  0x120
  00000120            00042                 RxBuffer:RX_BUF_LEN     ;receive data buffer
                      00043                 ENDC
                      00044 
                      00045 PROG1   CODE
                      00046 
0000                  00047 InterruptCode:  
  0000                00048                 GLOBAL  InterruptCode
0000   1283 1303      00049                 banksel WREG_TEMP
0002   00F0           00050                 movwf   WREG_TEMP       ;save WREG
0003   0803           00051                 movf    STATUS,W        ;store STATUS in WREG
0004   0183           00052                 clrf    STATUS          ;select file register bank0
0005   00F1           00053                 movwf   STATUS_TEMP     ;save STATUS value
0006   080A           00054                 movf    PCLATH,W        ;store PCLATH in WREG
0007   00F2           00055                 movwf   PCLATH_TEMP     ;save PCLATH value
0008   018A           00056                 clrf    PCLATH          ;select program memory page0
0009   0804           00057                 movf    FSR,W           ;store FSR in WREG
000A   00F3           00058                 movwf   FSR_TEMP        ;save FSR value
                      00059 
                      00060                 ;test other interrupt flags here
                      00061 
MPASM  5.42  /HOME/BEKEBAND/MPLABXPROJECTS/MA   3-4-2012  15:48:50         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B   1283 1303      00062                 banksel PIR1            
000D   1A8C           00063                 btfsc   PIR1,RCIF       ;test RCIF receive interrupt
000E   1683           00064                 bsf             STATUS,RP0      ;change to bank1 if RCIF set
000F   1A8C           00065                 btfsc   PIE1,RCIE       ;test if interrupt enabled if RCIF set
0010   2???           00066                 goto    GetData         ;if RCIF and RCIE set, do receive
                      00067 
0011   1283 1303      00068                 banksel PIR1            
0013   1A0C           00069                 btfsc   PIR1,TXIF       ;test for TXIF transmit interrupt
0014   1683           00070                 bsf             STATUS,RP0      ;change to bank1 if TXIF set
0015   1A0C           00071                 btfsc   PIE1,TXIE       ;test if interrupt enabled if TXIF set
0016   2???           00072                 goto    PutData         ;if TXIF and TCIE set, do transmit
                      00073 
0017   1283 1303      00074                 banksel PIR1
0019   180C           00075                 btfsc   PIR1, TMR1IF; test for TMR1 Overflow Interrupt Flag bit
001A   1683           00076                 bsf             STATUS,RP0      ;change to bank1 if TMR1 set
001B   180C           00077                 btfsc   PIE1, TMR1IE;test if interrupt enabled if TRR1IE set
001C   2???           00078                 goto    TimerTick
                      00079 
                      00080 ;can do special error handling here - an unexpected interrupt occurred 
                      00081 
001D   2???           00082                 goto    EndInt
                      00083 
                      00084 ;------------------------------------
                      00085 ;Get received data and write into receive buffer.
                      00086 
001E                  00087 GetData:        
001E   1283 1303      00088                 banksel RCSTA
0020   1898           00089                 btfsc   RCSTA,OERR      ;test overrun error flag
0021   2???           00090                 goto    ErrOERR         ;handle it if error
0022   1918           00091                 btfsc   RCSTA,FERR      ;test framing error flag
0023   2???           00092                 goto    ErrFERR         ;handle it if error
                      00093 
0024   1900           00094                 btfsc   Flags,RxBufFull ;check if buffer full
0025   2???           00095                 goto    ErrRxOver       ;handle it if full
                      00096 
0026   081A           00097                 movf    RCREG,W         ;get received data
0027   3A0D           00098                 xorlw   0x0d            ;compare with <CR>              
0028   1903           00099                 btfsc   STATUS,Z        ;check if the same
0029   1600           00100                 bsf             Flags,ReceivedCR ;indicate <CR> character received
002A   3A0D           00101                 xorlw   0x0d            ;change back to valid data
002B   2???           00102                 call    PutRxBuffer     ;and put in buffer
002C   2???           00103                 goto    EndInt
                      00104 
                      00105 ;error because OERR overrun error bit is set
                      00106 ;can do special error handling here - this code simply clears and continues
                      00107 
002D                  00108 ErrOERR:        
002D   1218           00109                 bcf             RCSTA,CREN      ;reset the receiver logic
002E   1618           00110                 bsf             RCSTA,CREN      ;enable reception again
002F   2???           00111                 goto    EndInt
                      00112 
                      00113 ;error because FERR framing error bit is set
                      00114 ;can do special error handling here - this code simply clears and continues
MPASM  5.42  /HOME/BEKEBAND/MPLABXPROJECTS/MA   3-4-2012  15:48:50         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00115 
0030                  00116 ErrFERR:        
0030   081A           00117                 movf    RCREG,W         ;discard received data that has error
0031   2???           00118                 goto    EndInt
                      00119 
                      00120 ;error because receive buffer is full and new data has been received
                      00121 ;can do special error handling here - this code simply clears and continues
                      00122 
0032                  00123 ErrRxOver:      
0032   081A           00124                 movf    RCREG,W         ;discard received data
0033   3A0D           00125                 xorlw   0x0d            ;but compare with <CR>          
0034   1903           00126                 btfsc   STATUS,Z        ;check if the same
0035   1600           00127                 bsf             Flags,ReceivedCR ;indicate <CR> character received
0036   2???           00128                 goto    EndInt
                      00129 
                      00130 ;------------------------------------
                      00131 ;Read data from the transmit buffer and transmit the data.
                      00132 
0037                  00133 PutData:        
0037   ???? ????      00134                 banksel Flags           
0039   1C80           00135                 btfss   Flags,TxBufEmpty ;check if transmit buffer empty
003A   2???           00136                 goto    PutDat1         ;if not then go get data and transmit
003B   1683 1303      00137                 banksel PIE1                    ;select bank1
003D   120C           00138                 bcf             PIE1,TXIE       ;disable TX interrupt because all done
003E   2???           00139                 goto    EndInt
                      00140 
003F                  00141 PutDat1:        
003F   2???           00142                 call    GetTxBuffer     ;get data to transmit
0040   0099           00143                 movwf   TXREG           ;and transmit
                      00144 
                      00145 ;End of interrupt routine restores context
0041                  00146 EndInt:         
0041   1283 1303      00147                 banksel FSR_TEMP
0043   0873           00148                 movf    FSR_TEMP,W      ;get saved FSR value
0044   0084           00149                 movwf   FSR                     ;restore FSR
0045   0872           00150                 movf    PCLATH_TEMP,W   ;get saved PCLATH value
0046   008A           00151                 movwf   PCLATH          ;restore PCLATH
0047   0871           00152                 movf    STATUS_TEMP,W   ;get saved STATUS value
0048   0083           00153                 movwf   STATUS          ;restore STATUS
0049   0EF0           00154                 swapf   WREG_TEMP,F     ;prepare WREG to be restored
004A   0E70           00155                 swapf   WREG_TEMP,W     ;restore WREG without affecting STATUS
004B   0009           00156                 retfie                          ;return from interrupt
                      00157 
                      00158 ;------------------------------------
                      00159 
004C                  00160 TimerTick:
                      00161 
004C   1283 1303      00162         banksel T1CON
004E   1010           00163         bcf             T1CON, TMR1ON
                      00164 
004F   1283 1303      00165         banksel PIR1    
0051   100C           00166         bcf             PIR1, TMR1IF
0052   1283 1303      00167         banksel TMR1H
MPASM  5.42  /HOME/BEKEBAND/MPLABXPROJECTS/MA   3-4-2012  15:48:50         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0054   3001           00168         movlw   0x001
0055   008F           00169         movwf   TMR1H
0056   018E           00170         clrf    TMR1L
                      00171 
0057   ???? ????      00172         banksel TIMER_ON
0059   1400           00173         bsf             TIMER_ON, ON_BIT
                      00174 
005A   1283 1303      00175         banksel T1CON
005C   1410           00176         bsf             T1CON, TMR1ON   
                      00177 
005D   2???           00178         goto    EndInt
                      00179 
                      00180 ;------------------------------------
                      00181 
005E                  00182 SavePorts
                      00183         
005E   1283 1303      00184         banksel PORTD
0060   0808           00185         movfw   PORTD
0061   00??           00186         movwf   PORTD_BUF       
0062   0008           00187         return
                      00188 
0063                  00189 RestorePorts
0063   1283 1303      00190         banksel PORTD
0065   08??           00191         movfw   PORTD_BUF
0066   0088           00192         movwf   PORTD
0067   0008           00193         return
                      00194 
0068                  00195 StopSerial:
  0000                00196         GLOBAL  StopSerial
0068   3000           00197                 movlw   0x00            ;disable global and peripheral ints
0069   008B           00198                 movwf   INTCON
006A   1683 1303      00199                 banksel PIE1
006C   3000           00200                 movlw   0x00            ;disable TX and RX interrupts
006D   008C           00201                 movwf   PIE1
                      00202         
006E   0008           00203         return
                      00204 
                      00205 ;----------------------------------------------------------------------------
                      00206 
006F                  00207 SetupTimer1
  0000                00208         GLOBAL  SetupTimer1
006F   1283 1303      00209         banksel T1CON
0071   1010           00210         bcf             T1CON, TMR1ON   ; stop timer 1
                      00211 
0072   1283 1303      00212         banksel TMR1H
0074   3001           00213         movlw   TMR1_HIGH
0075   008F           00214         movwf   TMR1H
0076   3000           00215         movlw   TMR1_LOW
0077   008E           00216         movwf   TMR1L
                      00217 
0078   018B           00218         clrf    INTCON  
0079   018C           00219         clrf    PIR1
007A   1683 1303      00220         banksel PIE1
MPASM  5.42  /HOME/BEKEBAND/MPLABXPROJECTS/MA   3-4-2012  15:48:50         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007C   018C           00221         clrf    PIE1
007D   140C           00222         bsf     PIE1, TMR1IE
                      00223 
007E   1283 1303      00224         banksel PIR1
0080   018C           00225         clrf    PIR1
0081   170B           00226         bsf             INTCON, PEIE
0082   178B           00227         bsf             INTCON, GIE
0083   1283 1303      00228         banksel T1CON
0085   3030           00229         movlw   B'00110000'             ; internal clock, enable timer1 prescaler = 8
0086   0090           00230         movwf   T1CON
0087   1410           00231         bsf             T1CON, TMR1ON
                      00232 
0088   0008           00233         return
                      00234 
                      00235 ;Set up serial port and buffers.
                      00236 
0089                  00237 SetupSerial:    
  0000                00238         GLOBAL  SetupSerial
0089   1683 1303      00239                 banksel TRISC           
008B   30C0           00240                 movlw   0xc0            ;set tris bits for TX and RX
008C   0487           00241                 iorwf   TRISC,F
008D   3060           00242                 movlw   SPBRG_VAL       ;set baud rate
008E   0099           00243                 movwf   SPBRG
008F   3024           00244                 movlw   0x24            ;enable transmission and high baud rate
0090   0098           00245                 movwf   TXSTA
0091   1283 1303      00246                 banksel RCSTA   
0093   3090           00247                 movlw   0x90            ;enable serial port and reception
0094   0098           00248                 movwf   RCSTA
0095   01??           00249                 clrf    Flags           ;clear all flag bits
                      00250 
0096   2???           00251                 call    InitTxBuffer    ;initialize transmit buffer
0097   2???           00252                 call    InitRxBuffer    ;initialize receive buffer
                      00253 
0098   30C0           00254                 movlw   0xc0            ;enable global and peripheral ints
0099   048B           00255                 iorwf   INTCON, F
009A   1683 1303      00256                 banksel PIE1
009C   3030           00257                 movlw   0x30            ;enable TX and RX interrupts
009D   048C           00258                 iorwf   PIE1, F
009E   0008           00259                 return
                      00260 
                      00261 ;----------------------------------------------------------------------------
                      00262 ;Circular buffer routines.
                      00263 
                      00264 ;----------------------------------------------------------------------------
                      00265 ;Initialize transmit buffer
                      00266 
009F                  00267 InitTxBuffer:   
009F   ???? ????      00268                 banksel TxStartPtr
00A1   30A0           00269                 movlw   LOW TxBuffer    ;take address of transmit buffer
00A2   00??           00270                 movwf   TxStartPtr              ;and place in transmit start pointer
00A3   00??           00271                 movwf   TxEndPtr                ;and place in transmit end pointer
00A4   1000           00272                 bcf             Flags,TxBufFull ;indicate Tx buffer is not full
00A5   1480           00273                 bsf             Flags,TxBufEmpty ;indicate Tx buffer is empty
MPASM  5.42  /HOME/BEKEBAND/MPLABXPROJECTS/MA   3-4-2012  15:48:50         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A6   0008           00274                 return
                      00275 
                      00276 ;----------------------------------------------
                      00277 ;Initialize receive buffer
                      00278 
00A7                  00279 InitRxBuffer:   
00A7   ???? ????      00280                 banksel RxStartPtr
00A9   3020           00281                 movlw   LOW RxBuffer    ;take address of receive buffer
00AA   00??           00282                 movwf   RxStartPtr      ;and place in receive start pointer
00AB   00??           00283                 movwf   RxEndPtr        ;and place in receive end pointer
00AC   1100           00284                 bcf     Flags,RxBufFull ;indicate Rx buffer is not full
00AD   1580           00285                 bsf     Flags,RxBufEmpty ;indicate Rx buffer is empty
00AE   0008           00286                 return
                      00287 
                      00288 ;----------------------------------------------
                      00289 ;Add a byte (from WREG) to the end of the transmit buffer
                      00290 
00AF                  00291 PutTxBuffer:    
  0000                00292         GLOBAL  PutTxBuffer
00AF   1683 1303      00293                 banksel PIE1
00B1   120C           00294                 bcf             PIE1,TXIE               ;disable transmit interrupt
00B2   ???? ????      00295                 banksel Flags
00B4   1800           00296                 btfsc   Flags,TxBufFull ;check if buffer full
00B5   2???           00297                 goto    ErrTxBufFull    ;and go handle error if full
                      00298 
00B6   ????           00299                 bankisel        BufferData      ;bank bit for indirect addressing
00B7   00??           00300                 movwf   BufferData              ;save WREG data into BufferData
00B8   08??           00301                 movf    TxEndPtr,W              ;get EndPointer
00B9   0084           00302                 movwf   FSR                             ;and place into FSR
00BA   08??           00303                 movf    BufferData,W    ;get BufferData
00BB   0080           00304                 movwf   INDF                    ;and store in buffer
                      00305 
                      00306 ;test if buffer pointer needs to wrap around to beginning of buffer memory
                      00307 
00BC   30B3           00308                 movlw   LOW TxBuffer+TX_BUF_LEN-1 ;get last address of buffer
00BD   06??           00309                 xorwf   TxEndPtr,W              ;and compare with end pointer
00BE   30A0           00310                 movlw   LOW TxBuffer    ;load first address of buffer
00BF   1D03           00311                 btfss   STATUS,Z                ;check if pointer is at last address
00C0   0A??           00312                 incf    TxEndPtr,W              ;if not then increment pointer
00C1   00??           00313                 movwf   TxEndPtr                ;store new end pointer value
                      00314 
                      00315 ;test if buffer is full
                      00316 
00C2   02??           00317                 subwf   TxStartPtr,W    ;compare with start pointer
00C3   1903           00318                 btfsc   STATUS,Z        ;check if the same
00C4   1400           00319                 bsf             Flags,TxBufFull ;if so then indicate buffer full
00C5   1080           00320                 bcf             Flags,TxBufEmpty ;buffer cannot be empty
00C6   1683 1303      00321                 banksel PIE1                    ;select bank 1
00C8   160C           00322                 bsf             PIE1,TXIE       ;enable transmit interrupt
00C9   1283 1303      00323                 banksel PORTA                   ;select bank 0
00CB   0008           00324                 return
                      00325 
                      00326 ;error because attempting to store new data and the buffer is full
MPASM  5.42  /HOME/BEKEBAND/MPLABXPROJECTS/MA   3-4-2012  15:48:50         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00327 ;can do special error handling here - this code simply ignores the byte
                      00328 
00CC                  00329 ErrTxBufFull:   
00CC   1683 1303      00330                 banksel PIE1                    ;select bank 1
00CE   160C           00331                 bsf             PIE1,TXIE       ;enable transmit interrupt
00CF   1283 1303      00332                 banksel PORTA                   ;select bank 0
00D1   0008           00333                 return                  ;no save of data because buffer full
                      00334 
                      00335 ;----------------------------------------------
                      00336 ;Add a byte (from WREG) to the end of the receive buffer
                      00337 
00D2                  00338 PutRxBuffer:    
00D2   ???? ????      00339                 banksel Flags                   ;select bank 0
00D4   1900           00340                 btfsc   Flags,RxBufFull ;check if buffer full
00D5   2???           00341                 goto    ErrRxBufFull    ;and go handle error if full
                      00342 
00D6   1783           00343                 bankisel RxBuffer       ;bank bit for indirect addressing
00D7   00??           00344                 movwf   BufferData      ;save WREG into BufferData
00D8   08??           00345                 movf    RxEndPtr,W      ;get EndPointer
00D9   0084           00346                 movwf   FSR             ;and place into FSR
00DA   08??           00347                 movf    BufferData,W    ;get BufferData
00DB   0080           00348                 movwf   INDF            ;store in buffer
                      00349 
                      00350 ;test if buffer pointer needs to wrap around to beginning of buffer memory
                      00351 
00DC   3033           00352                 movlw   LOW RxBuffer+RX_BUF_LEN-1 ;get last address of buffer
00DD   06??           00353                 xorwf   RxEndPtr,W      ;and compare with end pointer
00DE   3020           00354                 movlw   LOW RxBuffer    ;load first address of buffer
00DF   1D03           00355                 btfss   STATUS,Z        ;check if pointer is at last address
00E0   0A??           00356                 incf    RxEndPtr,W      ;if not then increment pointer
00E1   00??           00357                 movwf   RxEndPtr        ;store new end pointer value
                      00358 
                      00359 ;test if buffer is full
                      00360 
00E2   02??           00361                 subwf   RxStartPtr,W    ;compare with start pointer
00E3   1903           00362                 btfsc   STATUS,Z        ;check if the same
00E4   1500           00363                 bsf     Flags,RxBufFull ;if so then indicate buffer full
00E5   1180           00364                 bcf     Flags,RxBufEmpty ;buffer cannot be empty
00E6   0008           00365                 return
                      00366 
                      00367 ;error because attempting to store new data and the buffer is full
                      00368 ;can do special error handling here - this code simply ignores the byte
                      00369 
00E7   0008           00370 ErrRxBufFull:   return                  ;no save of data because buffer full
                      00371 
                      00372 ;----------------------------------------------
                      00373 ;Remove and return (in WREG) the byte at the start of the transmit buffer
                      00374 
00E8                  00375 GetTxBuffer:    
00E8   ???? ????      00376                 banksel Flags                   ;select bank 0
00EA   1880           00377                 btfsc   Flags,TxBufEmpty ;check if transmit buffer empty
00EB   2???           00378                 goto    ErrTxBufEmpty   ;and go handle error if empty
                      00379 
MPASM  5.42  /HOME/BEKEBAND/MPLABXPROJECTS/MA   3-4-2012  15:48:50         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EC   1383           00380                 bankisel TxBuffer       ;bank bit for indirect addressing
00ED   08??           00381                 movf    TxStartPtr,W    ;get StartPointer
00EE   0084           00382                 movwf   FSR             ;and place into FSR
                      00383 
                      00384 ;test if buffer pointer needs to wrap around to beginning of buffer memory
                      00385 
00EF   30B3           00386                 movlw   LOW TxBuffer+TX_BUF_LEN-1 ;get last address of buffer
00F0   06??           00387                 xorwf   TxStartPtr,W    ;and compare with start pointer
00F1   30A0           00388                 movlw   LOW TxBuffer    ;load first address of buffer
00F2   1D03           00389                 btfss   STATUS,Z        ;check if pointer is at last address
00F3   0A??           00390                 incf    TxStartPtr,W    ;if not then increment pointer
00F4   00??           00391                 movwf   TxStartPtr      ;store new pointer value
00F5   1000           00392                 bcf     Flags,TxBufFull ;buffer cannot be full
                      00393 
                      00394 ;test if buffer is now empty
                      00395 
00F6   06??           00396                 xorwf   TxEndPtr,W      ;compare start to end   
00F7   1903           00397                 btfsc   STATUS,Z        ;check if the same
00F8   1480           00398                 bsf     Flags,TxBufEmpty ;if same then buffer will be empty
00F9   0800           00399                 movf    INDF,W          ;get data from buffer
                      00400 
00FA   0008           00401                 return
                      00402 
                      00403 ;error because attempting to read data from an empty buffer
                      00404 ;can do special error handling here - this code simply returns zero
                      00405 
00FB                  00406 ErrTxBufEmpty:  
00FB   3400           00407                 retlw   0               ;tried to read empty buffer
                      00408 
                      00409 ;----------------------------------------------
                      00410 ;Remove and return (in WREG) the byte at the start of the receive buffer
                      00411 
00FC                  00412 GetRxBuffer:    
00FC   ???? ????      00413                 banksel Flags                   ;select bank 0
00FE   1980           00414                 btfsc   Flags,RxBufEmpty ;check if receive buffer empty
00FF   2???           00415                 goto    ErrRxBufEmpty   ;and go handle error if empty
                      00416 
0100   1683 1303      00417                 banksel PIE1            
0102   128C           00418                 bcf             PIE1,RCIE               ;disable receive interrupt
0103   1283 1303      00419                 banksel PORTA                   
                      00420 
0105   1783           00421                 bankisel RxBuffer               ;bank bit for indirect addressing
0106   08??           00422                 movf    RxStartPtr,W    ;get StartPointer
0107   0084           00423                 movwf   FSR                             ;and place into FSR
                      00424 
                      00425 ;test if buffer pointer needs to wrap around to beginning of buffer memory
                      00426 
0108   3033           00427                 movlw   LOW RxBuffer+RX_BUF_LEN-1 ;get last address of buffer
0109   06??           00428                 xorwf   RxStartPtr,W    ; and compare with start pointer
010A   3020           00429                 movlw   LOW RxBuffer    ;load first address of buffer
010B   1D03           00430                 btfss   STATUS,Z                ;check if pointer is at last address
010C   0A??           00431                 incf    RxStartPtr,W    ;if not then increment pointer
010D   00??           00432                 movwf   RxStartPtr              ;store new pointer value
MPASM  5.42  /HOME/BEKEBAND/MPLABXPROJECTS/MA   3-4-2012  15:48:50         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

010E   1100           00433                 bcf             Flags,RxBufFull ;buffer cannot be full
                      00434 
                      00435 ;test if buffer is now empty
                      00436 
010F   06??           00437                 xorwf   RxEndPtr,W              ;compare start to end   
0110   1903           00438                 btfsc   STATUS,Z                ;check if the same
0111   1580           00439                 bsf             Flags,RxBufEmpty ;if same then buffer will be empty
0112   0800           00440                 movf    INDF,W                  ;get data from buffer
                      00441 
0113   1683 1303      00442                 banksel PIE1                    
0115   168C           00443                 bsf             PIE1,RCIE               ;enable receive interrupt
0116   1283 1303      00444                 banksel PORTA                   ;select bank 0
0118   0008           00445                 return
                      00446 
                      00447 ;error because attempting to read data from an empty buffer
                      00448 ;can do special error handling here - this code simply returns zero
                      00449 
0119                  00450 ErrRxBufEmpty:  
0119   1683 1303      00451                 banksel PIE1                    ;select bank 1
011B   168C           00452                 bsf             PIE1,RCIE       ;enable receive interrupt
011C   1283 1303      00453                 banksel PORTA                   ;select bank 0
011E   3400           00454                 retlw   0               ;tried to read empty buffer
                      00455 
                      00456 ;----------------------------------------------------------------------------
                      00457 ;Move data from receive buffer to transmit buffer to echo the line back
                      00458 
011F                  00459 CopyRxToTx:     
  0000                00460         GLOBAL  CopyRxToTx
011F   ???? ????      00461                 banksel Flags                   ;select bank 0
0121   1200           00462                 bcf             Flags,ReceivedCR ;clear <CR> received indicator
0122                  00463 Copy1:          
0122   1980           00464                 btfsc   Flags,RxBufEmpty ;check if Rx buffer is empty
0123   0008           00465                 return                  ;if so then return
0124   2???           00466                 call    GetRxBuffer     ;get data from receive buffer
0125   00??           00467                 movwf   TempData        ;save data
0126   2???           00468                 call    PutTxBuffer     ;put data in transmit buffer
0127   08??           00469                 movf    TempData,W      ;restore data
0128   3A0D           00470                 xorlw   0x0d            ;compare with <CR> 
0129   1D03           00471                 btfss   STATUS,Z        ;check if the same
012A   2???           00472                 goto    Copy1           ;if not the same then move another byte
012B   0008           00473                 return
                      00474 
                      00475 ;----------------------------------------------------------------------------
                      00476 
                      00477                 END
MPASM  5.42  /HOME/BEKEBAND/MPLABXPROJECTS/MA   3-4-2012  15:48:50         PAGE 11


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
BufferData                        00000002
Buttons                           00000007
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
MPASM  5.42  /HOME/BEKEBAND/MPLABXPROJECTS/MA   3-4-2012  15:48:50         PAGE 12


SYMBOL TABLE
  LABEL                             VALUE 

CIS                               00000003
CKE                               00000006
CKP                               00000004
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000009C
CMIE                              00000006
CMIF                              00000006
CREN                              00000004
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            0000009D
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
Copy1                             00000122
CopyRxToTx                        0000011F
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
EndInt                            00000041
ErrFERR                           00000030
ErrOERR                           0000002D
ErrRxBufEmpty                     00000119
ErrRxBufFull                      000000E7
ErrRxOver                         00000032
ErrTxBufEmpty                     000000FB
ErrTxBufFull                      000000CC
F                                 00000001
FERR                              00000002
FSR                               00000004
FSR_TEMP                          00000073
Flags                             00000000
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
MPASM  5.42  /HOME/BEKEBAND/MPLABXPROJECTS/MA   3-4-2012  15:48:50         PAGE 13


SYMBOL TABLE
  LABEL                             VALUE 

GetData                           0000001E
GetRxBuffer                       000000FC
GetTxBuffer                       000000E8
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
InitRxBuffer                      000000A7
InitTxBuffer                      0000009F
InterruptCode                     00000000
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
ON_BIT                            00000000
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCLATH_TEMP                       00000072
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
MPASM  5.42  /HOME/BEKEBAND/MPLABXPROJECTS/MA   3-4-2012  15:48:50         PAGE 14


SYMBOL TABLE
  LABEL                             VALUE 

PORTC                             00000007
PORTD                             00000008
PORTD_BUF                         00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PutDat1                           0000003F
PutData                           00000037
PutRxBuffer                       000000D2
PutTxBuffer                       000000AF
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
MPASM  5.42  /HOME/BEKEBAND/MPLABXPROJECTS/MA   3-4-2012  15:48:50         PAGE 15


SYMBOL TABLE
  LABEL                             VALUE 

RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
RX_BUF_LEN                        00000014
R_NOT_W                           00000002
R_W                               00000002
ReceivedCR                        00000004
RestorePorts                      00000063
RxBufEmpty                        00000003
RxBufFull                         00000002
RxBuffer                          00000120
RxEndPtr                          00000006
RxStartPtr                        00000005
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPBRG_VAL                         00000060
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STATUS_TEMP                       00000071
SYNC                              00000004
SavePorts                         0000005E
SetupSerial                       00000089
SetupTimer1                       0000006F
StopSerial                        00000068
T0CS                              00000005
T0IE                              00000005
MPASM  5.42  /HOME/BEKEBAND/MPLABXPROJECTS/MA   3-4-2012  15:48:50         PAGE 16


SYMBOL TABLE
  LABEL                             VALUE 

T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TIMER_ON                          00000009
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR1_HIGH                         00000001
TMR1_LOW                          00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
MPASM  5.42  /HOME/BEKEBAND/MPLABXPROJECTS/MA   3-4-2012  15:48:50         PAGE 17


SYMBOL TABLE
  LABEL                             VALUE 

TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
TX_BUF_LEN                        00000014
TempData                          00000001
TimerTick                         0000004C
TxBufEmpty                        00000001
TxBufFull                         00000000
TxBuffer                          000000A0
TxEndPtr                          00000004
TxStartPtr                        00000003
UA                                00000001
W                                 00000000
WCOL                              00000007
WR                                00000001
WREG_TEMP                         00000070
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00001FFF
_CP_OFF                           00003FFF
_CP_ON                            00001FFF
_DEBUG_OFF                        00003FFF
MPASM  5.42  /HOME/BEKEBAND/MPLABXPROJECTS/MA   3-4-2012  15:48:50         PAGE 18


SYMBOL TABLE
  LABEL                             VALUE 

_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FFD
__16F877A                         00000001

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,    17 suppressed

